{"ast":null,"code":"var _jsxFileName = \"/Users/jamellivansamuels/weather-app/src/Components/searchBar.js\",\n    _s = $RefreshSig$();\n\nimport { getSuggestedQuery, render } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { createRenderer, renderIntoDocument } from 'react-dom/test-utils';\nimport api_key from '../apiKeys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api_key.base}${city}&appid=${api_key.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setCity('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"Novemebr\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  class Weather extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.stats = {\n        lat: undefined,\n        lon: undefined,\n        errorMessage: undefined,\n        temperatureC: undefined,\n        temperatureF: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        icon: \"CLEAR_DAY\",\n        sunrise: \"undefined\",\n        sunset: \"undefined\",\n        errorMsg: \"undefined\"\n      };\n    }\n\n  }\n\n  ;\n  {\n    if (this.state.temperatureC) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" (this.state.city)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"(this.state.country)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-icon\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(ReactAnimatedWeather, {\n              icon: this.state.icon,\n              color: defaults.color,\n              size: defaults.size,\n              animate: defaults.animate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"(this.state.main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dmy\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"txt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"current-time\",\n                children: /*#__PURE__*/_jsxDEV(Clock, {\n                  format: \"HH:mm:ss\",\n                  interval: 1000,\n                  ticking: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"current-date\",\n                children: dateBuilder(new Date())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temperature\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [this.state.temperatureC, \"\\xB0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          icon: this.state.icon,\n          weather: this.state.weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: loader,\n          style: {\n            width: \"50%\",\n            WebkitUserDrag: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"white\",\n            fontSize: \"22px\",\n            fontWeight: \"600\"\n          },\n          children: \"Detecting your location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            colr: \"white\",\n            marginTop: \"10px\"\n          },\n          children: [\"Your current location will be displayed on the App \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 64\n          }, this), \" & used for calculating Real time weather.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n\n_s(SearchBar, \"8xhIkAHhqAUl+XfNTxNkLw546xY=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/jamellivansamuels/weather-app/src/Components/searchBar.js"],"names":["getSuggestedQuery","render","React","useState","createRenderer","renderIntoDocument","api_key","SearchBar","city","setCity","weather","setWeather","search","evt","key","fetch","base","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","Weather","Component","stats","lat","undefined","lon","errorMessage","temperatureC","temperatureF","country","humidity","description","icon","sunrise","sunset","errorMsg","state","defaults","color","size","animate","Date","loader","width","WebkitUserDrag","fontSize","fontWeight","colr","marginTop"],"mappings":"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","sourcesContent":["import { getSuggestedQuery, render } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { createRenderer, renderIntoDocument } from 'react-dom/test-utils';\nimport api_key from '../apiKeys'\n\nfunction SearchBar() {\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState({});\n\n\n\n\n    const search = evt => {\n      if (evt.key === \"Enter\") {\n        fetch(`${api_key.base}${city}&appid=${api_key.key}`)\n        .then(res => res.json())\n        .then(result =>{\n          setWeather(result);\n          setCity('');\n          console.log(result);\n        });\n      }\n    }\n    \n    const dateBuilder = (d) => {\n        let months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"Novemebr\",\n          \"December\",\n        ];\n\n        let days =[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\"\n        ];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`;\n    };\n\nclass Weather extends React.Component {\n  stats = {\n    lat: undefined, \n    lon: undefined,\n    errorMessage: undefined,\n    temperatureC: undefined, \n    temperatureF: undefined, \n    city: undefined,\n    country: undefined, \n    humidity: undefined, \n    description: undefined, \n    icon: \"CLEAR_DAY\",\n    sunrise: \"undefined\",\n    sunset: \"undefined\",\n    errorMsg: \"undefined\",\n  }\n\n};\n\n\n      {\n      if (this.state.temperatureC) {\n      return (\n        <React.Fragment>\n          <div className=\"city\">\n            <div className=\"title\">\n              <h2> (this.state.city)</h2>\n              <h3>(this.state.country)</h3>\n              </div>\n              <div className=\"mb-icon\">\n                {\" \"}\n                <ReactAnimatedWeather\n                icon={this.state.icon}\n                color={defaults.color}\n                size={defaults.size}\n                animate={defaults.animate}\n                />\n                <p>(this.state.main</p>\n              </div>\n              <div className=\"date-time\">\n                <div className=\"dmy\">\n                  <div id=\"txt\"></div>\n                  <div className=\"current-time\">\n                    <Clock format=\"HH:mm:ss\" interval={1000} ticking={true} />  \n                  </div>\n                  <div className=\"current-date\">{dateBuilder(new Date())}</div>\n                </div>\n                <div className=\"temperature\">\n                  <p>\n                    {this.state.temperatureC}°<span>C</span>\n                  </p>\n                  {/*<span className=\"slash\">/</span>\n                  {this.state.temperatureF} &deg;F*/}\n                </div>\n              </div>\n          </div>\n          <Forecast icon={this.state.icon} weather={this.state.weather} />\n        </React.Fragment>\n      );\n      \n                }else {\n        return(\n        <React.Fragment>\n          <img src={loader} style={{ width: \"50%\", WebkitUserDrag: \"none\"}} />\n          <h3 style={{ color: \"white\", fontSize: \"22px\", fontWeight: \"600\"}}>\n            Detecting your location\n          </h3>\n          <h3 style={{colr: \"white\", marginTop: \"10px\" }}>\n            Your current location will be displayed on the App <br></br> & \n            used for calculating Real time weather. \n          </h3>\n        </React.Fragment>\n        );\n\n      }\n\n    } \n     \n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}