{"ast":null,"code":"var _jsxFileName = \"/Users/jamellivansamuels/weather-app/src/Components/searchBar.js\",\n    _s = $RefreshSig$();\n\nimport { getSuggestedQuery, render } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { createRenderer, renderIntoDocument } from 'react-dom/test-utils';\nimport api_key from '../apiKeys';\nimport api_key_forecast from '../apiKeys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  const [nextweather, setNextWeather] = useState({});\n\n  const searchCurrent = evt => {\n    if (evt.key === \"Submit\") {\n      fetch(`${api_key.base}${city}&units=metric&appid=${api_key.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setCity('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"Novemebr\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  /*class Weather extends React.Component {\n    stats = {\n      lat: undefined, \n      lon: undefined,\n      errorMessage: undefined,\n      temperatureC: undefined, \n      temperatureF: undefined, \n      city: undefined,\n      country: undefined, \n      humidity: undefined, \n      description: undefined, \n      icon: \"CLEAR_DAY\",\n      sunrise: \"undefined\",\n      sunset: \"undefined\",\n      errorMsg: \"undefined\",\n      }\n  \n    };*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setCity(e.target.value),\n          value: city,\n          onKeyPress: searchCurrent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\u2022c\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"z6aMqXy1nKf1CnvxR2HUvS5Qs6M=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/jamellivansamuels/weather-app/src/Components/searchBar.js"],"names":["getSuggestedQuery","render","React","useState","createRenderer","renderIntoDocument","api_key","api_key_forecast","SearchBar","city","setCity","weather","setWeather","nextweather","setNextWeather","searchCurrent","evt","key","fetch","base","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value","main","Date","Math","round","temp"],"mappings":"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","sourcesContent":["import { getSuggestedQuery, render } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { createRenderer, renderIntoDocument } from 'react-dom/test-utils';\nimport  api_key from '../apiKeys';\nimport api_key_forecast from '../apiKeys';\n\nfunction SearchBar() {\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState({});\n    const [nextweather, setNextWeather] = useState({});\n\n\n    const searchCurrent = (evt) => {\n      if (evt.key === \"Submit\") {\n        fetch(`${api_key.base}${city}&units=metric&appid=${api_key.key}`)\n        .then(res => res.json())\n        .then(result =>{\n          setWeather(result);\n          setCity('');\n          console.log(result);\n        });\n  \n      }\n    }\n    \n   \n\n\n    const dateBuilder = (d) => {\n        let months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"Novemebr\",\n          \"December\",\n        ];\n\n        let days =[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\"\n        ];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`;\n    };\n\n/*class Weather extends React.Component {\n  stats = {\n    lat: undefined, \n    lon: undefined,\n    errorMessage: undefined,\n    temperatureC: undefined, \n    temperatureF: undefined, \n    city: undefined,\n    country: undefined, \n    humidity: undefined, \n    description: undefined, \n    icon: \"CLEAR_DAY\",\n    sunrise: \"undefined\",\n    sunset: \"undefined\",\n    errorMsg: \"undefined\",\n    }\n\n  };*/\n\n\n  return (\n    <div className=\"search\">\n      <main>\n      <div className=\"search-box\">\n        <input \n        type=\"text\"\n        className=\"search-bar\"\n        placeholder=\"Search...\"\n        onChange={e => setCity(e.target.value)}\n        value={city}\n        onKeyPress={searchCurrent}\n        />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div className=\"location-box\">\n          <div className=\"location-box\">\n            <div className=\"location\"></div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}•c\n            </div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n      </div>\n        ) : ('')}\n      </main>\n    </div>\n\n  );\n}\n\n\n     \n      \n      \n  \n\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}