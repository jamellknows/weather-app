{"ast":null,"code":"var _jsxFileName = \"/Users/jamellivansamuels/weather-app/src/Components/searchBar.js\",\n    _s = $RefreshSig$();\n\nimport { getSuggestedQuery } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport api_key from '../apiKeys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api_key.base}${city}&appid=${api_key.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setCity('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"Novemebr\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturdsy\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  class Weather extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.stats = {\n        lat: undefined\n      };\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchbar\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setCity(e.target.value),\n          value: city,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 1\n  }, this);\n}\n\n_s(SearchBar, \"8xhIkAHhqAUl+XfNTxNkLw546xY=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/jamellivansamuels/weather-app/src/Components/searchBar.js"],"names":["getSuggestedQuery","React","useState","api_key","SearchBar","city","setCity","weather","setWeather","search","evt","key","fetch","base","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","Weather","Component","stats","lat","undefined","e","target","value"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAKA,QAAMO,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIA,GAAG,CAACC,GAAJ,KAAY,OAAhB,EAAyB;AACvBC,MAAAA,KAAK,CAAE,GAAET,OAAO,CAACU,IAAK,GAAER,IAAK,UAASF,OAAO,CAACQ,GAAI,EAA7C,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,MAAM,IAAG;AACbT,QAAAA,UAAU,CAACS,MAAD,CAAV;AACAX,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OAND;AAOD;AACF,GAVD;;AAYA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACvB,QAAIC,MAAM,GAAG,CACX,SADW,EAEX,UAFW,EAGX,OAHW,EAIX,OAJW,EAKX,KALW,EAMX,MANW,EAOX,MAPW,EAQX,QARW,EASX,WATW,EAUX,UAVW,EAWX,UAXW,CAAb;AAcA,QAAIC,IAAI,GAAE,CACR,QADQ,EAER,QAFQ,EAGR,SAHQ,EAIR,WAJQ,EAKR,UALQ,EAMR,QANQ,EAOR,UAPQ,CAAV;AAUA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAvC;AACH,GA/BD;;AAiCJ,QAAME,OAAN,SAAsB/B,KAAK,CAACgC,SAA5B,CAAsC;AAAA;AAAA;AAAA,WACpCC,KADoC,GAC5B;AACNC,QAAAA,GAAG,EAAEC;AADC,OAD4B;AAAA;;AAAA;;AAWlC,sBACJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,QAAQ,EAAEC,CAAC,IAAI/B,OAAO,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAV,CAJxB;AAKE,UAAA,KAAK,EAAElC,IALT;AAME,UAAA,UAAU,EAAEI;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADI;AAiBH;;GAhFQL,S;;KAAAA,S;AAkFT,eAAeA,SAAf","sourcesContent":["import { getSuggestedQuery } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport api_key from '../apiKeys'\n\nfunction SearchBar() {\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState({});\n\n\n\n\n    const search = evt => {\n      if (evt.key === \"Enter\") {\n        fetch(`${api_key.base}${city}&appid=${api_key.key}`)\n        .then(res => res.json())\n        .then(result =>{\n          setWeather(result);\n          setCity('');\n          console.log(result);\n        });\n      }\n    }\n    \n    const dateBuilder = (d) => {\n        let months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"Novemebr\",\n          \"December\",\n        ];\n\n        let days =[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturdsy\"\n        ];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`;\n    };\n\nclass Weather extends React.Component {\n  stats = {\n    lat: undefined, \n    \n\n\n  }\n\n}\n\n    \n    return (\n<div className=\"searchbar\">\n  <main>\n    <div className=\"search-box\">\n      <input \n        type=\"text\"\n        className=\"search-bar\"\n        placeholder=\"Search...\"\n        onChange={e => setCity(e.target.value)}\n        value={city}\n        onKeyPress={search}\n      />\n\n    </div>\n  </main>\n</div>\n    );\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}