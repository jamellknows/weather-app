{"ast":null,"code":"var _jsxFileName = \"/Users/jamellivansamuels/weather-app/src/Components/getWeather.js\";\n//import { config } from 'dotenv/types';\nimport React from 'react';\nimport searchBar from '../Components/searchBar.js'; //import Conditions from '../Conditions/weatherDisplay;\n//import api from './config.js'\n// i made a folder so you can put your fetch code etc in here jamell, just to make sure we dont have files all over the place (and ensure good practice!)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dateBuild = D => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[D.getDay()];\n  let date = D.getDate();\n  let month = months[D.getMonth()];\n  let year = D.getFullYear();\n  return `${day} ${date} ${month} ${year}`;\n};\n\nconst Weather = () => {\n  var _s = $RefreshSig$();\n\n  function getTheWeather() {\n    _s();\n\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState(''); // your fetch code for today's weather goes here\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What's the weather like today:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchBar,\n        type: \"submit\",\n        children: \"Show me the Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this);\n  }\n\n  _s(getTheWeather, \"sTzZGeYNFHPIfAgEbmjEtmPjYe0=\");\n\n  function getnextWeekWeather() {\n    // fetch data for next 7 days\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getnextWeekWeather,\n      type: \"submit\",\n      children: \"Next Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this);\n  }\n\n  function lastWeekWeather() {\n    // fetch for last week's weather\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: lastWeekWeather,\n      type: \"submit\",\n      children: \" Last Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this);\n  }\n};\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jamellivansamuels/weather-app/src/Components/getWeather.js"],"names":["React","searchBar","dateBuild","D","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","Weather","getTheWeather","query","setQuery","useState","weather","setWeather","getnextWeekWeather","lastWeekWeather"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CACA;AACA;AACA;;;;AAIA,MAAMC,SAAS,GAAIC,CAAD,IAAO;AACrB,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,MAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AAEF,MAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,MAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,MAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,MAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEF,SACE,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EADjC;AAGG,CAZH;;AAcC,MAAME,OAAO,GAAG,MAAM;AAAA;;AAElB,WAASC,aAAT,GAAyB;AAAA;;AACtB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,EAAD,CAAtC,CAFsB,CAGtB;;AAIH,wBACL;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEjB,SAAjB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADK;AAMC;;AAfiB,KAETc,aAFS;;AAiBlB,WAASM,kBAAT,GAA6B;AAE1B;AAGH,wBACI;AAAQ,MAAA,OAAO,EAAIA,kBAAnB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIC;;AAGL,WAASC,eAAT,GAA0B;AAEvB;AAGH,wBAEI;AAAQ,MAAA,OAAO,EAAEA,eAAjB;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAIC;AAAC,CAtCF;;KAAMR,O;AAwCP,eAAeA,OAAf","sourcesContent":["//import { config } from 'dotenv/types';\nimport React from 'react';\nimport searchBar from '../Components/searchBar.js';\n//import Conditions from '../Conditions/weatherDisplay;\n//import api from './config.js'\n// i made a folder so you can put your fetch code etc in here jamell, just to make sure we dont have files all over the place (and ensure good practice!)\n\n\n\nconst dateBuild = (D) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n  \n  let day = days[D.getDay()];\n  let date = D.getDate();\n  let month = months[D.getMonth()];\n  let year = D.getFullYear();\n\nreturn (\n `${day} ${date} ${month} ${year}`\n)\n  }\n   \n const Weather = () => {\n\n     function getTheWeather() {\n        const [query, setQuery] = useState('');\n        const [weather, setWeather] = useState('');            \n        // your fetch code for today's weather goes here\n\n     \n\n     return (\n<div>\n    <h2>What's the weather like today:</h2>\n    <button onClick={searchBar} type=\"submit\">Show me the Weather</button>\n</div>\n     );\n     }\n\n     function getnextWeekWeather(){\n\n        // fetch data for next 7 days\n     \n\n     return (\n         <button onClick = {getnextWeekWeather} type=\"submit\">Next Week</button>\n     )\n \n     }\n     \n\n function lastWeekWeather(){\n     \n    // fetch for last week's weather\n \n\n return (\n\n     <button onClick={lastWeekWeather} type=\"submit\"> Last Week</button>\n )\n }};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}